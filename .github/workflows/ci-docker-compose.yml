# .github/workflows/ci-docker-compose.yml

name: CI via Docker Compose

on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        # ... healthcheck etc ...
      rabbitmq:
        image: rabbitmq:3-management
        # ... healthcheck etc ...

    steps:
      - uses: actions/checkout@v4

      - name: Create .env from Secrets
        run: |
          cat > .env <<EOF
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DEBUG=True
          ALLOWED_HOSTS=localhost,127.0.0.1

          DATABASE_URL=${{ secrets.DATABASE_URL }}
          RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}

          OIDC_RP_CLIENT_ID=si-backend
          OIDC_RP_CLIENT_SECRET=${{ secrets.OIDC_RP_CLIENT_SECRET }}
          OIDC_OP_ISSUER=${{ secrets.OIDC_OP_ISSUER }}

          AFRICAS_TALKING_API_KEY=${{ secrets.AFRICAS_TALKING_API_KEY }}
          AFRICAS_TALKING_USERNAME=${{ secrets.AFRICAS_TALKING_USERNAME }}

          EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_PORT=${{ secrets.EMAIL_PORT }}
          EMAIL_USE_TLS=True
          EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          EOF

      - name: Build Docker images
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .github/docker-compose.ci.yml \
            build

      - name: Start Postgres & RabbitMQ
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .github/docker-compose.ci.yml \
            up -d postgres rabbitmq

      - name: Wait for Postgres
        run: |
          until docker compose \
            -f docker-compose.yml \
            -f .github/docker-compose.ci.yml \
            exec -T postgres pg_isready -U postgres; do
            echo "Waiting for Postgres..."
            sleep 1
          done

      - name: Wait for RabbitMQ
        run: |
          until docker compose \
            -f docker-compose.yml \
            -f .github/docker-compose.ci.yml \
            exec -T rabbitmq rabbitmqctl status; do
            echo "Waiting for RabbitMQ..."
            sleep 1
          done

      - name: Run migrations
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .github/docker-compose.ci.yml \
            run --rm web python manage.py migrate --noinput

      - name: Run tests
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .github/docker-compose.ci.yml \
            run --rm web pytest --maxfail=1 --disable-warnings -q --cov=.

      - name: Tear down
        if: always()
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .github/docker-compose.ci.yml \
            down --volumes --remove-orphans