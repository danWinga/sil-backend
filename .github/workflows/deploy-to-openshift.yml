name: CD â†’ OpenShift via Helm

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT: danwinga-dev
      NAMESPACE: danwinga-dev
      SECRET_NAME: si-backend-secret
      CHART_API: helm/si-backend-api
      CHART_WORKER: helm/si-notifications-worker
      IMAGE_REPO: ghcr.io/danwinga/si-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine image tag (use commit SHA)
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Install oc CLI
        run: |
          curl -L https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz \
            | tar -xz oc
          sudo mv oc /usr/local/bin/

      - name: Login to OpenShift
        run: |
          oc login ${{ secrets.OPENSHIFT_SERVER }} \
            --token="${{ secrets.OPENSHIFT_TOKEN }}" \
            --insecure-skip-tls-verify
          oc project ${{ env.PROJECT }}

      - name: Create/Update Kubernetes Secret
        run: |
          oc apply -f - <<EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: ${SECRET_NAME}
            namespace: ${NAMESPACE}
          type: Opaque
          stringData:
            SECRET_KEY:            "${{ secrets.SECRET_KEY }}"
            DEBUG:                 "False"
            ALLOWED_HOSTS:         "*"
            # point at Bitnami Postgres release 'si-postgres'
            DATABASE_URL:          "postgres://postgres:postgres@si-postgres-postgresql:5432/postgres"
            # point at Bitnami RabbitMQ release 'si-rabbitmq'
            RABBITMQ_URL:          "amqp://guest:guest@si-rabbitmq:5672/"
            BROKER_URL:            "amqp://guest:guest@si-rabbitmq:5672/"
            CELERY_BROKER_URL:     "amqp://guest:guest@si-rabbitmq:5672/"
            AFRICAS_TALKING_USERNAME: "${{ secrets.AFRICAS_TALKING_USERNAME }}"
            AFRICAS_TALKING_API_KEY:  "${{ secrets.AFRICAS_TALKING_API_KEY }}"
            EMAIL_HOST:            "${{ secrets.EMAIL_HOST }}"
            EMAIL_PORT:            "${{ secrets.EMAIL_PORT }}"
            EMAIL_HOST_USER:       "${{ secrets.EMAIL_HOST_USER }}"
            EMAIL_HOST_PASSWORD:   "${{ secrets.EMAIL_HOST_PASSWORD }}"
            ADMIN_EMAIL:           "${{ secrets.ADMIN_EMAIL }}"
          EOF

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Add Bitnami repo & update
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Deploy/Upgrade API chart
        run: |
          helm upgrade --install si-api ${CHART_API} \
            --namespace ${NAMESPACE} \
            --set image.repository=${IMAGE_REPO} \
            --set image.tag=${IMAGE_TAG} \
            --set secretName=${SECRET_NAME}

      - name: Deploy/Upgrade Worker chart
        run: |
          helm upgrade --install si-worker ${CHART_WORKER} \
            --namespace ${NAMESPACE} \
            --set image.repository=${IMAGE_REPO} \
            --set image.tag=${IMAGE_TAG} \
            --set secretName=${SECRET_NAME}

      - name: Wait for rollout
        run: |
          oc rollout status deployment/si-api   -n ${NAMESPACE} --timeout=2m
          oc rollout status deployment/si-worker -n ${NAMESPACE} --timeout=2m