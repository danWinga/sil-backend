name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    # Start Postgres & RabbitMQ for pytest to connect to
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
        options: >-
          --health-cmd="rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      # point Django at the above services
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      RABBITMQ_URL: amqp://guest:guest@localhost:5672/
      # disable OIDC integration tests
      DEBUG: "True"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python & Poetry
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Lint with Black
        run: poetry run black --check .

      - name: Lint imports with isort
        run: poetry run isort --check-only .

      - name: Lint with flake8
        run: poetry run flake8 .

      - name: Run tests
        run: poetry run pytest --maxfail=1 --disable-warnings -q --cov=.

      - name: Upload coverage to Codecov (optional)
        if: github.event_name == 'push'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true